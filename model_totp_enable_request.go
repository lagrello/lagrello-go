/*
 * Lagrello API
 *
 * API specification for Lagrello, a simple to use authentication service
 *
 * API version: 1.0.0
 * Contact: support@lagrello.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagrello-go

import (
	"encoding/json"
)

// TotpEnableRequest request to enable google authenticator method for user
type TotpEnableRequest struct {
	Enable bool `json:"enable"`
}

// NewTotpEnableRequest instantiates a new TotpEnableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotpEnableRequest(enable bool) *TotpEnableRequest {
	this := TotpEnableRequest{}
	this.Enable = enable
	return &this
}

// NewTotpEnableRequestWithDefaults instantiates a new TotpEnableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotpEnableRequestWithDefaults() *TotpEnableRequest {
	this := TotpEnableRequest{}
	return &this
}

// GetEnable returns the Enable field value
func (o *TotpEnableRequest) GetEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value
// and a boolean to check if the value has been set.
func (o *TotpEnableRequest) GetEnableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enable, true
}

// SetEnable sets field value
func (o *TotpEnableRequest) SetEnable(v bool) {
	o.Enable = v
}

func (o TotpEnableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableTotpEnableRequest struct {
	value *TotpEnableRequest
	isSet bool
}

func (v NullableTotpEnableRequest) Get() *TotpEnableRequest {
	return v.value
}

func (v *NullableTotpEnableRequest) Set(val *TotpEnableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTotpEnableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTotpEnableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotpEnableRequest(val *TotpEnableRequest) *NullableTotpEnableRequest {
	return &NullableTotpEnableRequest{value: val, isSet: true}
}

func (v NullableTotpEnableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotpEnableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


