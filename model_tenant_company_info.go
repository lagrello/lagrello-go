/*
 * Lagrello API
 *
 * API specification for Lagrello, a simple to use authentication service
 *
 * API version: 1.0.0
 * Contact: support@lagrello.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lagrello-go

import (
	"encoding/json"
)

// TenantCompanyInfo struct for TenantCompanyInfo
type TenantCompanyInfo struct {
	// The full name of your company.
	Name string `json:"Name"`
	// The first line of the address for your company.
	Address string `json:"Address"`
	// The city in which the address is located.
	City string `json:"City"`
	// The postal code for the address.
	PostalCode string `json:"PostalCode"`
	// The country in which the address is located. This should be given as an ISO 3361-1 country code (two letter abbreviation).
	Country string `json:"Country"`
	// Your company's organization number.
	OrgNumber string `json:"OrgNumber"`
	// A value added tax identification number, identifier used in many countries, including the countries of the European Union, for value added tax purposes.
	VATNumber string `json:"VATNumber"`
}

// NewTenantCompanyInfo instantiates a new TenantCompanyInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantCompanyInfo(name string, address string, city string, postalCode string, country string, orgNumber string, vATNumber string) *TenantCompanyInfo {
	this := TenantCompanyInfo{}
	this.Name = name
	this.Address = address
	this.City = city
	this.PostalCode = postalCode
	this.Country = country
	this.OrgNumber = orgNumber
	this.VATNumber = vATNumber
	return &this
}

// NewTenantCompanyInfoWithDefaults instantiates a new TenantCompanyInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantCompanyInfoWithDefaults() *TenantCompanyInfo {
	this := TenantCompanyInfo{}
	return &this
}

// GetName returns the Name field value
func (o *TenantCompanyInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TenantCompanyInfo) SetName(v string) {
	o.Name = v
}

// GetAddress returns the Address field value
func (o *TenantCompanyInfo) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *TenantCompanyInfo) SetAddress(v string) {
	o.Address = v
}

// GetCity returns the City field value
func (o *TenantCompanyInfo) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *TenantCompanyInfo) SetCity(v string) {
	o.City = v
}

// GetPostalCode returns the PostalCode field value
func (o *TenantCompanyInfo) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *TenantCompanyInfo) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetCountry returns the Country field value
func (o *TenantCompanyInfo) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *TenantCompanyInfo) SetCountry(v string) {
	o.Country = v
}

// GetOrgNumber returns the OrgNumber field value
func (o *TenantCompanyInfo) GetOrgNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgNumber
}

// GetOrgNumberOk returns a tuple with the OrgNumber field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetOrgNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OrgNumber, true
}

// SetOrgNumber sets field value
func (o *TenantCompanyInfo) SetOrgNumber(v string) {
	o.OrgNumber = v
}

// GetVATNumber returns the VATNumber field value
func (o *TenantCompanyInfo) GetVATNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VATNumber
}

// GetVATNumberOk returns a tuple with the VATNumber field value
// and a boolean to check if the value has been set.
func (o *TenantCompanyInfo) GetVATNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VATNumber, true
}

// SetVATNumber sets field value
func (o *TenantCompanyInfo) SetVATNumber(v string) {
	o.VATNumber = v
}

func (o TenantCompanyInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Name"] = o.Name
	}
	if true {
		toSerialize["Address"] = o.Address
	}
	if true {
		toSerialize["City"] = o.City
	}
	if true {
		toSerialize["PostalCode"] = o.PostalCode
	}
	if true {
		toSerialize["Country"] = o.Country
	}
	if true {
		toSerialize["OrgNumber"] = o.OrgNumber
	}
	if true {
		toSerialize["VATNumber"] = o.VATNumber
	}
	return json.Marshal(toSerialize)
}

type NullableTenantCompanyInfo struct {
	value *TenantCompanyInfo
	isSet bool
}

func (v NullableTenantCompanyInfo) Get() *TenantCompanyInfo {
	return v.value
}

func (v *NullableTenantCompanyInfo) Set(val *TenantCompanyInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantCompanyInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantCompanyInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantCompanyInfo(val *TenantCompanyInfo) *NullableTenantCompanyInfo {
	return &NullableTenantCompanyInfo{value: val, isSet: true}
}

func (v NullableTenantCompanyInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantCompanyInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


